import { GetServerSideProps } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";

export const Home = ({
  randomWord,
  randomPath,
}: {
  randomWord: number;
  randomPath: string;
}) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Vercel + LogDNA duplicates</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>SSR Page (Dashboard)</h1>

        <p className={styles.description}>
          Random word returned from server side{" "}
          <code className={styles.code}>{randomWord}</code>
        </p>

        <div className={styles.grid}>
          <Link href={randomPath}>
            <a className={styles.card}>
              <h2>To {randomPath} &rarr;</h2>
              <p>Links to SSR page with dynamic route.</p>
            </a>
          </Link>

          <Link href="/">
            <a className={styles.card}>
              <h2>Dashboard &rarr;</h2>
              <p>Link to index that redirects back here.</p>
            </a>
          </Link>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  const WORDS = ["vercel", "is", "awesome", "except", "this", "issue :("];
  const PATHS = ["/org/package", "/package-name", "/other", "/random-route"];

  return {
    props: {
      randomWord: WORDS[Math.floor(Math.random() * WORDS.length)],
      randomPath: PATHS[Math.floor(Math.random() * PATHS.length)],
    },
  };
};
